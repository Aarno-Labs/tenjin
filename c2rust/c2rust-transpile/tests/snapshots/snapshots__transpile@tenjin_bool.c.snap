---
source: c2rust-transpile/tests/snapshots.rs
expression: cat tests/snapshots/tenjin_bool.rs
input_file: c2rust-transpile/tests/snapshots/tenjin_bool.c
---
#![allow(
    dead_code,
    non_camel_case_types,
    non_snake_case,
    non_upper_case_globals,
    unused_assignments,
    unused_mut
)]
use std::process::ExitCode;
pub const true_0: core::ffi::c_int = 1 as core::ffi::c_int;
unsafe fn main_0() -> core::ffi::c_int {
    let mut isAdmin: bool = 1 as core::ffi::c_int != 0;
    let mut isSubscriber: bool = true_0 != 0;
    let mut isValid: bool = 0 as core::ffi::c_int != 0;
    if !isValid && isSubscriber as core::ffi::c_int != 0 && isAdmin as core::ffi::c_int != 0 {
        return 1 as core::ffi::c_int;
    }
    return 0 as core::ffi::c_int;
}
pub fn main() -> ExitCode {
    unsafe { ExitCode::from(main_0() as u8) }
}
